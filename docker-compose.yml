version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: agentdb
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - '6379:6379'

  backend:
    build: ./backend
    ports:
      - '4000:4000'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - ./backend/.env
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./frontend
      args:
        BACKEND_URL: http://backend:4000
    ports:
      - '3000:3000'
    depends_on:
      backend:
        condition: service_healthy
    env_file:
      - ./frontend/.env
    environment:
      - BACKEND_URL=http://backend:4000
      - NEXT_PUBLIC_API_URL=http://backend:4000

volumes:
  pgdata:
